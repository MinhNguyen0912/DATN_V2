@using DATN.Core.ViewModel.voucherVM
@model List<VoucherVM>

@{
    ViewData["Title"] = "Danh sách Voucher";
    var batchId = ViewBag.BatchId; // Ensure you pass this value from your controller
}

<h2>Danh sách Voucher</h2>

<!-- Buttons to open modals -->
<div class="mb-3">
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createVoucherModal">Tạo Voucher</button>
    <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#createVoucherListModal">Tạo Danh Sách Voucher</button>
    <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#searchVoucher">Tìm kiếm</button>
    <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#assignVoucher">Phát hành</button>

</div>

<table class="table">
    <thead>
        <tr>
            <th>Mã Voucher</th>
            <th>Trạng thái</th>
            <th>Ngày phát hành</th>
            <th>Ngày hết hạn</th>
            <th>Người dùng</th>
            <th>Hành động</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Any())
        {
            foreach (var voucher in Model)
            {
                <tr>
                    <td>@voucher.Code</td>
                    <td>@voucher.Status</td>
                    <td>@voucher.ReleaseDate?.ToString("dd/MM/yyyy")</td>
                    <td>@voucher.ExpiryDate?.ToString("dd/MM/yyyy")</td>
                    <td>@(voucher.User != null ? voucher.User.UserName : "N/A")</td>
                    <td>
                        @if (voucher.Status == DATN.Core.Enum.VoucherStatus.NotUsed)
                        {
                            <form asp-controller="Voucher" asp-action="RevokeVoucher" method="post" style="display:inline;">
                                <input type="hidden" name="id" value="@voucher.Id" />
                                <input type="hidden" name="batchId" value="@batchId" />
                                <button type="submit" class="btn btn-secondary">Thu hồi</button>
                            </form>
                        }
                        else if (voucher.Status == DATN.Core.Enum.VoucherStatus.Expired || voucher.Status == DATN.Core.Enum.VoucherStatus.Used)
                        {
                        }
                        else
                        {
                            <form asp-controller="Voucher" asp-action="DeleteVoucher" method="post" style="display:inline;">
                                <input type="hidden" name="id" value="@voucher.Id" />
                                <input type="hidden" name="batchId" value="@batchId" />
                                <button type="submit" class="btn btn-danger">Xóa</button>
                            </form>
                        }
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="6" class="text-center">Không có voucher nào.</td>
            </tr>
        }
    </tbody>
</table>

<!-- Modal for creating a single voucher -->
<div class="modal fade" id="createVoucherModal" tabindex="-1" aria-labelledby="createVoucherModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createVoucherModalLabel">Thêm Voucher</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Form for creating vouchers -->
                <form id="createVoucherForm">
                    <div id="voucherInputsContainer">
                        <div class="voucher-input-group mb-3">
                            <label class="form-label">Mã Voucher</label>
                            <input type="text" class="form-control voucher-code-input" required />
                        </div>
                    </div>
                    <button type="button" id="addVoucherCode" class="btn btn-secondary">Thêm Mã Voucher</button>
                    <button type="submit" class="btn btn-primary">Lưu</button>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- Modal for creating a list of vouchers -->
<div class="modal fade" id="createVoucherListModal" tabindex="-1" aria-labelledby="createVoucherListModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createVoucherListModalLabel">Tạo Danh Sách Voucher</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Form for creating a list of vouchers -->
                <form id="createVoucherListForm">
                    <div class="mb-3">
                        <label for="voucherCount" class="form-label">Số lượng voucher</label>
                        <input type="number" class="form-control" id="voucherCount" min="1" required />
                    </div>
                    <div class="mb-3">
                        <label for="codeLength" class="form-label">Độ dài mã voucher</label>
                        <input type="number" class="form-control" id="codeLength" min="1" required />
                    </div>
                    <div class="mb-3">
                        <label for="prefix" class="form-label">Ký tự đầu</label>
                        <input type="text" class="form-control" id="prefix" maxlength="2" />
                    </div>
                    <div class="mb-3">
                        <label for="suffix" class="form-label">Ký tự cuối</label>
                        <input type="text" class="form-control" id="suffix" maxlength="2" />
                    </div>
                    <button type="submit" class="btn btn-primary">Tạo</button>
                </form>
            </div>
        </div>
    </div>
</div>
<<!-- Modal for searching vouchers -->
<div class="modal fade" id="searchVoucher" tabindex="-1" aria-labelledby="searchVoucherLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="searchVoucherLabel">Tìm kiếm Voucher</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Form for searching vouchers -->
                <form method="get" asp-action="Index" asp-controller="Voucher">
                    <input type="hidden" name="batchId" value="@batchId" />
                    <div class="mb-3">
                        <label for="userName" class="form-label">Tên người dùng</label>
                        <input type="text" id="userName" name="userName" class="form-control" />
                    </div>
                    <div class="mb-3">
                        <label for="status" class="form-label">Trạng thái</label>
                        <select id="status" name="status" class="form-control">
                            <option value="">-- Chọn trạng thái --</option>
                            <option value="NotUsed">Chưa sử dụng</option>
                            <option value="Unpushlished">Chưa phát hành</option>
                            <option value="Used">Đã sử dụng</option>
                            <option value="Expired">Hết hạn</option>
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary">Tìm kiếm</button>
                </form>
            </div>
        </div>
    </div>
</div>
<<!-- Modal for assign vouchers -->
<div class="modal fade" id="assignVoucher" tabindex="-1" aria-labelledby="assignVoucherLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="searchVoucherLabel">Phát hành Voucher</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Form for assign vouchers -->
                @{
                    var availableVouchers = Model.Where(v => v.Status == DATN.Core.Enum.VoucherStatus.Unpushlished).Count();
                }
                <div class="mb-3">
                    <label class="form-label">Tổng số voucher khả dụng: </label>
                    <span>@availableVouchers</span>
                </div>
                <div class="mb-3">
                    <input type="radio" name="userType" value="all" id="allUsers" />
                    <label for="allUsers">Phát cho tất cả người dùng</label>
                    <input type="radio" name="userType" value="specific" id="specificUsers" />
                    <label for="specificUsers">Phát cho người dùng cụ thể</label>
                </div>
                <div class="mb-3" id="allUsersForm">
                    <form asp-action="AssignVoucher" asp-controller="Voucher" method="post">
                        <!-- BatchId -->
                        <input type="hidden" name="batchId" value="@batchId" />

                        <!-- Activation Time -->
                        <div class="mb-3">
                            <label for="activation-time">Activation Time:</label>
                            <input type="datetime-local" id="activation-time" name="ActivationTime" required />
                        </div>

                        <!-- Total Voucher Assign for all users -->
                        <div class="mb-3">
                            <label for="total-assign">Total Vouchers for Each User:</label>
                            <input type="number" id="total-assign" name="TotalVoucherAssign" min="1" required />
                        </div>

                        <!-- Users (Hidden) -->
                        @if (ViewBag.Users is List<DATN.Core.Models.AppUser> users && users.Any())
                        {
                            @for (int i = 0; i < users.Count; i++)
                            {
                                <!-- Hidden Inputs for ListAssign -->
                                <input type="hidden" name="listAssign[@i].userId" value="@users[i].Id" />
                                <input type="hidden" class="assign-time" name="listAssign[@i].activationTime" value="" />
                                <input type="hidden" name="listAssign[@i].totalVoucherAssign" value="" class="total-assign" />
                            }
                        }

                        <button type="submit" class="btn btn-primary">Assign Vouchers</button>
                    </form>
                </div>

                <div class="mb-3">
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Html.Raw(@"<script src=""https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"" integrity=""sha384-oBqDVmMz4fnFO9tFUBpXW0gByaDhs3ZyzzKqK/QrI3nFq56k1E91eK7F3Oh0k8VY"" crossorigin=""anonymous""></script>")
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js" integrity="sha384-8uM8n5kCz08TyJ/g89cHtjH/yG9X8bSdeKHdy6y2EIMgJmdoT9S2dMkHGfAK91JK7" crossorigin="anonymous"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            document.getElementById('addVoucherCode').addEventListener('click', function () {
                var newVoucherInputGroup = document.createElement('div');
                newVoucherInputGroup.classList.add('voucher-input-group', 'mb-3');

                var newVoucherLabel = document.createElement('label');
                newVoucherLabel.classList.add('form-label');
                newVoucherLabel.textContent = 'Mã Voucher';

                var newVoucherInput = document.createElement('input');
                newVoucherInput.type = 'text';
                newVoucherInput.classList.add('form-control', 'voucher-code-input');
                newVoucherInput.required = true;

                newVoucherInputGroup.appendChild(newVoucherLabel);
                newVoucherInputGroup.appendChild(newVoucherInput);

                document.getElementById('voucherInputsContainer').appendChild(newVoucherInputGroup);
            });

            document.getElementById('createVoucherForm').addEventListener('submit', function (event) {
                event.preventDefault();

                var inputs = document.querySelectorAll('.voucher-code-input');
                var voucherCodes = Array.from(inputs).map(input => input.value.trim()).filter(value => value !== '');

                if (voucherCodes.length === 0) {
                    alert('Vui lòng nhập ít nhất một mã voucher.');
                    return;
                }

                var batchId = @batchId;
                var requestData = {
                    batchId: batchId,
                    voucherCodes: voucherCodes
                };

                fetch('https://localhost:7095/api/Voucher/CreateVoucher_Viet', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(requestData)
                }).then(response => {
                    if (response.ok) {
                        window.location.reload();
                    } else {
                        alert('Có lỗi xảy ra khi tạo voucher.');
                    }
                }).catch(error => {
                    console.error('Có lỗi xảy ra:', error);
                    alert('Có lỗi xảy ra khi kết nối tới server.');
                });
            });

            document.getElementById('createVoucherListForm').addEventListener('submit', function (event) {
                event.preventDefault();

                var voucherCount = parseInt(document.getElementById('voucherCount').value, 10);
                var codeLength = parseInt(document.getElementById('codeLength').value, 10);
                var prefix = document.getElementById('prefix').value;
                var suffix = document.getElementById('suffix').value;

                if (voucherCount < 1 || codeLength < 1 || (prefix.length + suffix.length >= codeLength)) {
                    alert('Thông tin nhập không hợp lệ. Vui lòng kiểm tra lại.');
                    return;
                }

                var vouchers = generateVouchers(voucherCount, codeLength, prefix, suffix);

                var batchId = @batchId;
                var requestData = {
                    BatchId: batchId,
                    VoucherCodes: vouchers
                };

                fetch('https://localhost:7095/api/Voucher/CreateVoucher_Viet', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(requestData)
                }).then(response => {
                    if (response.ok) {
                        window.location.reload(); // Tải lại trang sau khi tạo voucher thành công
                    } else {
                        alert('Có lỗi xảy ra khi tạo danh sách voucher.');
                    }
                }).catch(error => {
                    console.error('Có lỗi xảy ra:', error);
                    alert('Có lỗi xảy ra khi kết nối tới server.');
                });
            });

            function generateVouchers(count, length, prefix, suffix) {
                var vouchers = [];
                for (var i = 0; i < count; i++) {
                    var code = generateRandomString(length - prefix.length - suffix.length);
                    vouchers.push(prefix + code + suffix);
                }
                return vouchers;
            }

            function generateRandomString(length) {
                var result = '';
                var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
                var charactersLength = characters.length;
                for (var i = 0; i < length; i++) {
                    result += characters.charAt(Math.floor(Math.random() * charactersLength));
                }
                return result;
            }
            document.getElementsByName('userType').forEach(function (radio) {
                radio.addEventListener('change', function () {
                    if (this.value === 'specific') {
                        document.getElementById('specificUsers').innerHTML = 'Phát cho người dùng cụ thể';
                    } else {
                        document.getElementById('specificUsers').innerHTML = 'Phát cho người dùng cụ thể';
                    }
                });
            });
            document.getElementById('activation-time').addEventListener('change', function () {
                var activationTime = this.value;

                // Cập nhật giá trị ActivationTime cho tất cả input ẩn
                document.querySelectorAll('.assign-time').forEach(function (input) {
                    input.value = activationTime;
                });
            });

            document.getElementById('total-assign').addEventListener('input', function () {
                var totalAssign = this.value;

                // Cập nhật giá trị TotalVoucherAssign cho tất cả input ẩn
                document.querySelectorAll('.total-assign').forEach(function (input) {
                    input.value = totalAssign;
                });
            });
        });

    </script>

}
